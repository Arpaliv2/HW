>>>from django.contrib.auth.models import User
>>>user1 = User.objects.create_user('Иванов')
>>>user2 = User.objects.create_user('Петров')
>>>from data_base.models import Author
>>>author1 = Author.objects.create(user = user1)   
>>>author2 = Author.objects.create(user = user2)   
>>>from data_base.models import Category   
>>>category1 = Category.objects.create(name='Спорт') 
>>>category2 = Category.objects.create(name='Политика') 
>>>category3 = Category.objects.create(name='Технологииа')
>>>category4 = Category.objects.create(name='Компьтерные игры')  
>>>from data_base.models import Post        
>>>post1 = Post.objects.create(author = author1, type = 'news', heading = 'Какая-то новость про спорт', text = 'Какая-то скучная новость про то, как кто-то кого-то обыграл, а не должен был, коментарии от спортсменов, где они хвалят соперника, а между строк читается что они друг друга в ноль не ставят, коментарий тренера победивший стороны, еле-еле не лопающегося от чувства собственной важности, коментарий тренера проигравшей стороны, у которого в проигрыше виноваты вообще все, кроме него самого и в конце небольшая статистика по ппрошедшему событию') 
>>>post2 = Post.objects.create(author = author1, type = 'article', heading = 'ТОП-10 самых запоминающихся моментов в видеоиграх', text = 'Унылейшая спискота без капли анализа, снабжённая корявыми скриншотами, в которой автор по сути просто перечисляет всё, что ему хоть как-то запомнилось из видеоигр. Широту его видеоигрового опыта прекрасно иллюстрирует тот факт, что девять из десяти мест занимают колда и соулсборны.')
>>>post3 = Post.objects.create(author = author2, type = 'article', heading = 'Unreal Engine 5 - что нового в новой итерации легендарного движка.', text = 'Статья умереннного размера, в которой автор честно пытается разобраться, что нового может ожидать игроков и разработчиков в новом движке. Имеется небольшой экскурс в историю, конкретные изменения в картинке проиллюстрированы скриншотами (с честным упоминанием, откуда они стануты), что делают сами технологии описано более-менее человеческим языком. Чуствуется, что автору не хватает знаний и опыта, что он, не безуспешно, компенсирует усидчивастью и желанием разобраться в вопросе.')
>>>post1.category.set([category1])  
>>>post1.save()
>>>post2.category.set([category4])
>>>post2.save()
>>>post3.category.set([category3, category4])
>>>post3.save()
>>>from data_base.models import Comment
>>>comment1 = Comment.objects.create (post = post1, text = 'Комент о том, как коментирующий поднялденег на этом матче вместе с ссылкой на капера. Что характерно, коментарий оставлен через минуту, после публикации новости, а на аватаре коментирующего персонаж из того же аниме, что и у автора поста.')
>>>comment2 = Comment.objects.create (post = post2, user = author1.user, text = 'Отличная статья! Автор, пиши еще в том же духе!')
>>>comment3 = Comment.objects.create (post = post2, user = author2.user, text = 'Я прочитал эту "статью" до конца, и вот я могу сказать: во-первых - топ говно. Причём во-всём: в идее, в исполнении, в оформлении... Сука, даже в орфографии! И во-вторых: ты, автор, должен мне десять минут моей чёртовой жизни.')
>>>comment4 = Comment.objects.create (post = post2, text = 'А мне автор должен всего две минуты. Дарю лайфхак - читаешь десятое место, понимаешь, насколько всё плохо, предпологаешь, что на первом месте, читаешь первое место, понимаешь насколько всё ещё хуже, лепишь минус.')
>>>comment5 = Comment.objects.create (post = post3, user = author1.user, text = 'Статья - неинтересная, заунывная хрень! Читать ее себя не уважать!')
>>>comment6 = Comment.objects.create (post = post3, text = 'Кто бы говорил.')
>>>post1.like()
>>>post1.dislike(5)
>>>post1.save()  
>>>post2.like()
>>>post2.dislike(12)
>>>post2.save()
>>>post3.like(15)
>>>post3.dislike(2)
>>>post3.save()
>>>comment1.like()
>>>comment1.dislike(4)
>>>comment1.save()
>>>comment2.like()
>>>comment2.dislike(3)
>>>comment2.save()
>>>comment3.like(5)
>>>comment3.dislike()
>>>comment3.save()
>>>comment4.like(7)
>>>comment4.dislike(2)
>>>comment4.save()
>>>comment5.like()
>>>comment5.dislike(6)
>>>comment5.save()
>>>comment6.like(3)
>>>comment6.dislike()
>>>comment6.save()
>>>User.objects.order_by('-author__rating').values('username','author__rating')[0]
>>>ba = Post.objects.order_by('-rating').values[0]     
>>>print(f'{ba.time_of_addition}\n{ba.author.user.username}\n{ba.heading}\n{ba.text[0:124]}...') 
>>>cba = Comment.objects.filter(post=ba.pk)
>>> for x in cba:
...     print (x.time_of_addating)    
...     if(x.user):
...             print(x.user.username)
...     print(x.rating)               
...     print(x.text)
